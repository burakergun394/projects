// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.EntityFrameworkCore;

#nullable disable

namespace Persistence.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230827152128_Initial_User")]
    partial class Initial_User
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("DBO")
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Products.Product", b =>
                {
                    b.Property<string>("TenantCode")
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(1);

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Category");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Explanation")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("Explanation");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Price");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Status");

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("Stock");

                    b.HasKey("TenantCode", "Id");

                    b.ToTable("PRODUCT", "DBO");

                    b.HasData(
                        new
                        {
                            TenantCode = "DEFAULT",
                            Id = new Guid("5d079186-0c72-4368-b7e1-d2e9ac75202f"),
                            Category = "Category1",
                            Code = "Code1",
                            CreatedAt = new DateTime(2023, 8, 27, 15, 21, 28, 533, DateTimeKind.Utc).AddTicks(5558),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation1",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name1",
                            Price = 1m,
                            Status = "Active",
                            Stock = 1
                        },
                        new
                        {
                            TenantCode = "DEFAULT",
                            Id = new Guid("672076ca-3e9b-4a26-b851-730227d7102f"),
                            Category = "Category2",
                            Code = "Code2",
                            CreatedAt = new DateTime(2023, 8, 27, 15, 21, 28, 533, DateTimeKind.Utc).AddTicks(5582),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation2",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name2",
                            Price = 2m,
                            Status = "Active",
                            Stock = 2
                        },
                        new
                        {
                            TenantCode = "DEFAULT",
                            Id = new Guid("0d1312f1-8a9c-4eff-b816-bc92164d5e79"),
                            Category = "Category3",
                            Code = "Code3",
                            CreatedAt = new DateTime(2023, 8, 27, 15, 21, 28, 533, DateTimeKind.Utc).AddTicks(5591),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation3",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name3",
                            Price = 3m,
                            Status = "Active",
                            Stock = 3
                        },
                        new
                        {
                            TenantCode = "DEFAULT",
                            Id = new Guid("cdd66bac-8e92-4d4d-ba10-53cbb227ae8e"),
                            Category = "Category4",
                            Code = "Code4",
                            CreatedAt = new DateTime(2023, 8, 27, 15, 21, 28, 533, DateTimeKind.Utc).AddTicks(5601),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation4",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name4",
                            Price = 4m,
                            Status = "Active",
                            Stock = 4
                        },
                        new
                        {
                            TenantCode = "DEFAULT",
                            Id = new Guid("446dff11-a0af-4886-b18b-b665db1fc8bc"),
                            Category = "Category5",
                            Code = "Code5",
                            CreatedAt = new DateTime(2023, 8, 27, 15, 21, 28, 533, DateTimeKind.Utc).AddTicks(5610),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation5",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name5",
                            Price = 5m,
                            Status = "Active",
                            Stock = 5
                        },
                        new
                        {
                            TenantCode = "DEFAULT",
                            Id = new Guid("0edfcbff-bc66-4af5-927e-1fb549b04781"),
                            Category = "Category6",
                            Code = "Code6",
                            CreatedAt = new DateTime(2023, 8, 27, 15, 21, 28, 533, DateTimeKind.Utc).AddTicks(5623),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation6",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name6",
                            Price = 6m,
                            Status = "Active",
                            Stock = 6
                        },
                        new
                        {
                            TenantCode = "DEFAULT",
                            Id = new Guid("4d0f2405-a410-40d3-ae8d-d40f915c0826"),
                            Category = "Category7",
                            Code = "Code7",
                            CreatedAt = new DateTime(2023, 8, 27, 15, 21, 28, 533, DateTimeKind.Utc).AddTicks(5632),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation7",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name7",
                            Price = 7m,
                            Status = "Active",
                            Stock = 7
                        },
                        new
                        {
                            TenantCode = "DEFAULT",
                            Id = new Guid("91f0e24f-beba-4325-8616-227cdb991e5e"),
                            Category = "Category8",
                            Code = "Code8",
                            CreatedAt = new DateTime(2023, 8, 27, 15, 21, 28, 533, DateTimeKind.Utc).AddTicks(5639),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation8",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name8",
                            Price = 8m,
                            Status = "Active",
                            Stock = 8
                        },
                        new
                        {
                            TenantCode = "DEFAULT",
                            Id = new Guid("f1f62ade-f10b-42dc-8e62-a6697324c9be"),
                            Category = "Category9",
                            Code = "Code9",
                            CreatedAt = new DateTime(2023, 8, 27, 15, 21, 28, 533, DateTimeKind.Utc).AddTicks(5652),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation9",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name9",
                            Price = 9m,
                            Status = "Active",
                            Stock = 9
                        },
                        new
                        {
                            TenantCode = "DEFAULT",
                            Id = new Guid("959564a1-dd7c-483e-a2e8-4a455748d04c"),
                            Category = "Category10",
                            Code = "Code10",
                            CreatedAt = new DateTime(2023, 8, 27, 15, 21, 28, 533, DateTimeKind.Utc).AddTicks(5665),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation10",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name10",
                            Price = 10m,
                            Status = "Active",
                            Stock = 10
                        });
                });

            modelBuilder.Entity("Domain.Users.User", b =>
                {
                    b.Property<string>("TenantCode")
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(1);

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Email");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Language");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(1000)")
                        .HasColumnName("PasswordHash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(100)")
                        .HasColumnName("PasswordSalt");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Status");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Surname");

                    b.HasKey("TenantCode", "Id");

                    b.ToTable("USER", "DBO");
                });
#pragma warning restore 612, 618
        }
    }
}
