// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.EntityFrameworkCore;

#nullable disable

namespace Persistence.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230903105440_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("DBO")
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Claims.Claim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NormalizedName");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.ToTable("CLAIMS", "DBO");
                });

            modelBuilder.Entity("Domain.Products.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Category");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Explanation")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("Explanation");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Price");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Status");

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("Stock");

                    b.Property<string>("TenantCode")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("PRODUCTS", "DBO");

                    b.HasData(
                        new
                        {
                            Id = new Guid("51372f8d-b5d7-453b-8f18-30b88ee4b5b2"),
                            Category = "Category1",
                            Code = "Code1",
                            CreatedAt = new DateTime(2023, 9, 3, 10, 54, 40, 177, DateTimeKind.Utc).AddTicks(2758),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation1",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name1",
                            Price = 1m,
                            Status = "Active",
                            Stock = 1,
                            TenantCode = "DEFAULT"
                        },
                        new
                        {
                            Id = new Guid("4816af20-640f-49bc-9601-ca85634344eb"),
                            Category = "Category2",
                            Code = "Code2",
                            CreatedAt = new DateTime(2023, 9, 3, 10, 54, 40, 177, DateTimeKind.Utc).AddTicks(2789),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation2",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name2",
                            Price = 2m,
                            Status = "Active",
                            Stock = 2,
                            TenantCode = "DEFAULT"
                        },
                        new
                        {
                            Id = new Guid("c5c5fd3d-43bd-46a1-91bb-09d30a22b752"),
                            Category = "Category3",
                            Code = "Code3",
                            CreatedAt = new DateTime(2023, 9, 3, 10, 54, 40, 177, DateTimeKind.Utc).AddTicks(2800),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation3",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name3",
                            Price = 3m,
                            Status = "Active",
                            Stock = 3,
                            TenantCode = "DEFAULT"
                        },
                        new
                        {
                            Id = new Guid("89f9b507-b9f2-4c2b-bfb6-2a5f9589c597"),
                            Category = "Category4",
                            Code = "Code4",
                            CreatedAt = new DateTime(2023, 9, 3, 10, 54, 40, 177, DateTimeKind.Utc).AddTicks(2810),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation4",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name4",
                            Price = 4m,
                            Status = "Active",
                            Stock = 4,
                            TenantCode = "DEFAULT"
                        },
                        new
                        {
                            Id = new Guid("d5fe22ac-d442-4522-a3a1-33d7aac1a37e"),
                            Category = "Category5",
                            Code = "Code5",
                            CreatedAt = new DateTime(2023, 9, 3, 10, 54, 40, 177, DateTimeKind.Utc).AddTicks(2819),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation5",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name5",
                            Price = 5m,
                            Status = "Active",
                            Stock = 5,
                            TenantCode = "DEFAULT"
                        },
                        new
                        {
                            Id = new Guid("bcc91754-8a41-43c7-b592-152b27695877"),
                            Category = "Category6",
                            Code = "Code6",
                            CreatedAt = new DateTime(2023, 9, 3, 10, 54, 40, 177, DateTimeKind.Utc).AddTicks(2834),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation6",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name6",
                            Price = 6m,
                            Status = "Active",
                            Stock = 6,
                            TenantCode = "DEFAULT"
                        },
                        new
                        {
                            Id = new Guid("0de042a5-d7a3-40fd-a808-e3631b176e24"),
                            Category = "Category7",
                            Code = "Code7",
                            CreatedAt = new DateTime(2023, 9, 3, 10, 54, 40, 177, DateTimeKind.Utc).AddTicks(2844),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation7",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name7",
                            Price = 7m,
                            Status = "Active",
                            Stock = 7,
                            TenantCode = "DEFAULT"
                        },
                        new
                        {
                            Id = new Guid("0d42cccf-9bd2-43ed-b4d3-ade9644148ef"),
                            Category = "Category8",
                            Code = "Code8",
                            CreatedAt = new DateTime(2023, 9, 3, 10, 54, 40, 177, DateTimeKind.Utc).AddTicks(2854),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation8",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name8",
                            Price = 8m,
                            Status = "Active",
                            Stock = 8,
                            TenantCode = "DEFAULT"
                        },
                        new
                        {
                            Id = new Guid("fa292c5c-2e50-4332-968c-bddc26fb360f"),
                            Category = "Category9",
                            Code = "Code9",
                            CreatedAt = new DateTime(2023, 9, 3, 10, 54, 40, 177, DateTimeKind.Utc).AddTicks(2869),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation9",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name9",
                            Price = 9m,
                            Status = "Active",
                            Stock = 9,
                            TenantCode = "DEFAULT"
                        },
                        new
                        {
                            Id = new Guid("4675f71e-9e14-49f0-9a90-3433892d98c3"),
                            Category = "Category10",
                            Code = "Code10",
                            CreatedAt = new DateTime(2023, 9, 3, 10, 54, 40, 177, DateTimeKind.Utc).AddTicks(2884),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation10",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name10",
                            Price = 10m,
                            Status = "Active",
                            Stock = 10,
                            TenantCode = "DEFAULT"
                        });
                });

            modelBuilder.Entity("Domain.Roles.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NormalizedName");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Status");

                    b.Property<string>("TenantCode")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("ROLES", "DBO");
                });

            modelBuilder.Entity("Domain.RolesClaims.RoleClaim", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RoleId");

                    b.Property<Guid>("ClaimId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ClaimId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Status");

                    b.HasKey("RoleId", "ClaimId");

                    b.ToTable("ROLES_CLAIMS", "DBO");
                });

            modelBuilder.Entity("Domain.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Email");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Language");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.Property<string>("NormalizedUsername")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NormalizedUsername");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(1000)")
                        .HasColumnName("PasswordHash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(100)")
                        .HasColumnName("PasswordSalt");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RoleId");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Status");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Surname");

                    b.Property<string>("TenantCode")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(1);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.ToTable("USERS", "DBO");
                });
#pragma warning restore 612, 618
        }
    }
}
