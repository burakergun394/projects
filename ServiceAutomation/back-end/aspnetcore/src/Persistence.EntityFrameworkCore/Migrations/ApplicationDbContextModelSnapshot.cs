// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.EntityFrameworkCore;

#nullable disable

namespace Persistence.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("DBO")
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Identity.Claims.Claim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NormalizedName");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.ToTable("CLAIMS", "DBO");

                    b.HasData(
                        new
                        {
                            Id = new Guid("302b0514-4bd6-4d5f-9495-9bf129070423"),
                            CreatedAt = new DateTime(2023, 9, 16, 17, 37, 43, 534, DateTimeKind.Local).AddTicks(1106),
                            CreatedBy = "SYSTEM",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "claim.create",
                            NormalizedName = "CLAIM.CREATE",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("6df72ae0-ecb1-46cf-8208-41614d48e732"),
                            CreatedAt = new DateTime(2023, 9, 16, 17, 37, 43, 534, DateTimeKind.Local).AddTicks(1129),
                            CreatedBy = "SYSTEM",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "claim.get",
                            NormalizedName = "CLAIM.GET",
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("af80beb8-1e62-4a71-8791-a29ea9f728f0"),
                            CreatedAt = new DateTime(2023, 9, 16, 17, 37, 43, 534, DateTimeKind.Local).AddTicks(1132),
                            CreatedBy = "SYSTEM",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "system.role.create",
                            NormalizedName = "SYSTEM.ROLE.CREATE",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("Domain.Identity.Roles.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NormalizedName");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Status");

                    b.Property<string>("TenantCode")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("ROLES", "DBO");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a06310b2-5b34-4760-8b1b-33ec48dd3cfa"),
                            CreatedAt = new DateTime(2023, 9, 16, 17, 37, 43, 534, DateTimeKind.Local).AddTicks(6567),
                            CreatedBy = "SYSTEM",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "admin",
                            NormalizedName = "ADMIN",
                            Status = "Active",
                            TenantCode = "SYSTEM"
                        });
                });

            modelBuilder.Entity("Domain.Identity.RolesClaims.RoleClaim", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RoleId");

                    b.Property<Guid>("ClaimId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ClaimId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Status");

                    b.HasKey("RoleId", "ClaimId");

                    b.ToTable("ROLES_CLAIMS", "DBO");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("a06310b2-5b34-4760-8b1b-33ec48dd3cfa"),
                            ClaimId = new Guid("302b0514-4bd6-4d5f-9495-9bf129070423"),
                            CreatedAt = new DateTime(2023, 9, 16, 17, 37, 43, 535, DateTimeKind.Local).AddTicks(4655),
                            CreatedBy = "SYSTEM",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Status = "Active"
                        },
                        new
                        {
                            RoleId = new Guid("a06310b2-5b34-4760-8b1b-33ec48dd3cfa"),
                            ClaimId = new Guid("6df72ae0-ecb1-46cf-8208-41614d48e732"),
                            CreatedAt = new DateTime(2023, 9, 16, 17, 37, 43, 535, DateTimeKind.Local).AddTicks(4670),
                            CreatedBy = "SYSTEM",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Status = "Active"
                        },
                        new
                        {
                            RoleId = new Guid("a06310b2-5b34-4760-8b1b-33ec48dd3cfa"),
                            ClaimId = new Guid("af80beb8-1e62-4a71-8791-a29ea9f728f0"),
                            CreatedAt = new DateTime(2023, 9, 16, 17, 37, 43, 535, DateTimeKind.Local).AddTicks(4678),
                            CreatedBy = "SYSTEM",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("Domain.Identity.Tenants.Tenant", b =>
                {
                    b.Property<string>("TenantCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Status");

                    b.HasKey("TenantCode");

                    b.ToTable("TENANTS", "DBO");

                    b.HasData(
                        new
                        {
                            TenantCode = "SYSTEM",
                            CreatedAt = new DateTime(2023, 9, 16, 14, 37, 43, 537, DateTimeKind.Utc).AddTicks(5398),
                            CreatedBy = "SYSTEM",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Status = "Active"
                        },
                        new
                        {
                            TenantCode = "AYTAS",
                            CreatedAt = new DateTime(2023, 9, 16, 14, 37, 43, 537, DateTimeKind.Utc).AddTicks(5402),
                            CreatedBy = "SYSTEM",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("Domain.Identity.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Email");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.Property<string>("NormalizedUsername")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NormalizedUsername");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(1000)")
                        .HasColumnName("PasswordHash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(100)")
                        .HasColumnName("PasswordSalt");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RoleId");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Status");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Surname");

                    b.Property<string>("TenantCode")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(1);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.ToTable("USERS", "DBO");

                    b.HasData(
                        new
                        {
                            Id = new Guid("40eb7d2f-5969-4afa-90a4-84aa0377fc04"),
                            CreatedAt = new DateTime(2023, 9, 16, 17, 37, 43, 938, DateTimeKind.Local).AddTicks(9440),
                            CreatedBy = "SYSTEM",
                            Email = "system@gmail.com",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "System",
                            NormalizedUsername = "SYSTEMUSER",
                            PasswordHash = new byte[] { 211, 220, 92, 79, 103, 82, 152, 95, 228, 181, 100, 144, 18, 117, 225, 117, 198, 111, 99, 84, 34, 227, 50, 145, 89, 26, 183, 126, 194, 210, 128, 249, 12, 119, 93, 24, 73, 0, 61, 158, 115, 142, 250, 115, 147, 243, 182, 212, 154, 188, 196, 175, 143, 110, 88, 32, 213, 204, 124, 16, 26, 5, 253, 34 },
                            PasswordSalt = new byte[] { 194, 99, 184, 97, 57, 59, 248, 71, 252, 6, 66, 180, 13, 185, 174, 158, 0, 190, 54, 245, 75, 221, 82, 202, 226, 176, 71, 20, 222, 191, 33, 97, 206, 144, 79, 208, 217, 211, 139, 7, 68, 193, 254, 155, 32, 53, 43, 227, 82, 232, 197, 132, 71, 12, 248, 151, 215, 218, 211, 194, 142, 148, 19, 72 },
                            RoleId = new Guid("a06310b2-5b34-4760-8b1b-33ec48dd3cfa"),
                            Status = "Active",
                            Surname = "System",
                            TenantCode = "SYSTEM",
                            Username = "SystemUser"
                        });
                });

            modelBuilder.Entity("Domain.Products.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Category");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Explanation")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("Explanation");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime2(7)");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Price");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Status");

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("Stock");

                    b.Property<string>("TenantCode")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("PRODUCTS", "DBO");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d08fa985-7dda-4869-88be-ed512274025d"),
                            Category = "Category1",
                            Code = "Code1",
                            CreatedAt = new DateTime(2023, 9, 16, 14, 37, 43, 939, DateTimeKind.Utc).AddTicks(9971),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation1",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name1",
                            Price = 1m,
                            Status = "Active",
                            Stock = 1,
                            TenantCode = "DEFAULT"
                        },
                        new
                        {
                            Id = new Guid("063618cb-f454-42e6-9176-4bb71fe130ac"),
                            Category = "Category2",
                            Code = "Code2",
                            CreatedAt = new DateTime(2023, 9, 16, 14, 37, 43, 939, DateTimeKind.Utc).AddTicks(9981),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation2",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name2",
                            Price = 2m,
                            Status = "Active",
                            Stock = 2,
                            TenantCode = "DEFAULT"
                        },
                        new
                        {
                            Id = new Guid("27c9aec1-6954-4174-bbab-833d5d5af93f"),
                            Category = "Category3",
                            Code = "Code3",
                            CreatedAt = new DateTime(2023, 9, 16, 14, 37, 43, 939, DateTimeKind.Utc).AddTicks(9987),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation3",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name3",
                            Price = 3m,
                            Status = "Active",
                            Stock = 3,
                            TenantCode = "DEFAULT"
                        },
                        new
                        {
                            Id = new Guid("6cab53f5-07e5-4b02-a7ed-d28b92886af2"),
                            Category = "Category4",
                            Code = "Code4",
                            CreatedAt = new DateTime(2023, 9, 16, 14, 37, 43, 940, DateTimeKind.Utc).AddTicks(56),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation4",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name4",
                            Price = 4m,
                            Status = "Active",
                            Stock = 4,
                            TenantCode = "DEFAULT"
                        },
                        new
                        {
                            Id = new Guid("fdafe6b2-e733-4eb2-9f25-8394875f42bc"),
                            Category = "Category5",
                            Code = "Code5",
                            CreatedAt = new DateTime(2023, 9, 16, 14, 37, 43, 940, DateTimeKind.Utc).AddTicks(73),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation5",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name5",
                            Price = 5m,
                            Status = "Active",
                            Stock = 5,
                            TenantCode = "DEFAULT"
                        },
                        new
                        {
                            Id = new Guid("5ffc1b31-11c9-4bc8-95c4-de99f896f300"),
                            Category = "Category6",
                            Code = "Code6",
                            CreatedAt = new DateTime(2023, 9, 16, 14, 37, 43, 940, DateTimeKind.Utc).AddTicks(87),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation6",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name6",
                            Price = 6m,
                            Status = "Active",
                            Stock = 6,
                            TenantCode = "DEFAULT"
                        },
                        new
                        {
                            Id = new Guid("9ecfc4c9-01e0-4f72-a953-2535812e2d6b"),
                            Category = "Category7",
                            Code = "Code7",
                            CreatedAt = new DateTime(2023, 9, 16, 14, 37, 43, 940, DateTimeKind.Utc).AddTicks(92),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation7",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name7",
                            Price = 7m,
                            Status = "Active",
                            Stock = 7,
                            TenantCode = "DEFAULT"
                        },
                        new
                        {
                            Id = new Guid("48e7c59b-5a58-4e62-b46c-a94e850aee24"),
                            Category = "Category8",
                            Code = "Code8",
                            CreatedAt = new DateTime(2023, 9, 16, 14, 37, 43, 940, DateTimeKind.Utc).AddTicks(97),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation8",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name8",
                            Price = 8m,
                            Status = "Active",
                            Stock = 8,
                            TenantCode = "DEFAULT"
                        },
                        new
                        {
                            Id = new Guid("fcd7ca19-8904-4915-a01d-f7dd49a4b5f9"),
                            Category = "Category9",
                            Code = "Code9",
                            CreatedAt = new DateTime(2023, 9, 16, 14, 37, 43, 940, DateTimeKind.Utc).AddTicks(102),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation9",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name9",
                            Price = 9m,
                            Status = "Active",
                            Stock = 9,
                            TenantCode = "DEFAULT"
                        },
                        new
                        {
                            Id = new Guid("84c41c96-a966-4c02-8dfb-a7f3a2ed0722"),
                            Category = "Category10",
                            Code = "Code10",
                            CreatedAt = new DateTime(2023, 9, 16, 14, 37, 43, 940, DateTimeKind.Utc).AddTicks(109),
                            CreatedBy = "DEFAULT",
                            Explanation = "Explanation10",
                            LastUpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "",
                            Name = "Name10",
                            Price = 10m,
                            Status = "Active",
                            Stock = 10,
                            TenantCode = "DEFAULT"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
